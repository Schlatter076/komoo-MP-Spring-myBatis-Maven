package org.loyer.komoo.commands;

public interface Commands {

  // ==================东崎表指令================
  /** 读取电压指令 */
  public static final byte[] READ_VOL = { 0x01, 0x03, 0x40, 0x00, 0x00, 0x02, (byte) 0xd1, (byte) 0xcb };
  /** 写通道号2,电压指令 01 10 41 00 00 02 04 00 01 00 01 5f fc */
  public static final byte[] WRITE_VOL_CHANNEL_2 = { 0x01, 0x10, 0x41, 0x00, 0x00, 0x02, 0x04, 0x00, 0x01, 0x00, 0x01, 0x5f, (byte) 0xfc };
  /** 写通道号3,电压01 10 41 00 00 02 04 00 02 00 00 6e 3c */
  public static final byte[] WRITE_VOL_CHANNEL_3 = { 0x01, 0x10, 0x41, 0x00, 0x00, 0x02, 0x04, 0x00, 0x02, 0x00, 0x00, 0x6e, 0x3c };
  /** 电压表写0位小数点01 06 40 01 00 00 cd ca */
  public static final byte[] WRITE_VOL_DP_0 = { 0x01, 0x06, 0x40, 0x01, 0x00, 0x00, (byte) 0xcd, (byte) 0xca };
  /** 电压表写1位小数点01 06 40 01 00 01 0c 0a */
  public static final byte[] WRITE_VOL_DP_1 = { 0x01, 0x06, 0x40, 0x01, 0x00, 0x01, 0x0c, 0x0a };
  /** 电压表写2位小数点01 06 40 01 00 02 4c 0b */
  public static final byte[] WRITE_VOL_DP_2 = { 0x01, 0x06, 0x40, 0x01, 0x00, 0x02, 0x4c, 0x0b };
  /** 电压表写3位小数点01 06 40 01 00 03 8d cb */
  public static final byte[] WRITE_VOL_DP_3 = { 0x01, 0x06, 0x40, 0x01, 0x00, 0x03, (byte) 0x8d, (byte) 0xcb };

  /** 读取测量值，电流指令 00 03 40 00 00 02 d0 1a */
  public static final byte[] READ_CUR = { 0x00, 0x03, 0x40, 0x00, 0x00, 0x02, (byte) 0xd0, 0x1a };
  /** 电流表写0位小数点00 06 40 01 00 00 cc 1b */
  public static final byte[] WRITE_CUR_DP_0 = { 0x00, 0x06, 0x40, 0x01, 0x00, 0x00, (byte) 0xcc, 0x1b };
  /** 电流表写1位小数点00 06 40 01 00 01 0d db */
  public static final byte[] WRITE_CUR_DP_1 = { 0x00, 0x06, 0x40, 0x01, 0x00, 0x01, 0x0d, (byte) 0xdb };
  /** 电流表写2位小数点00 06 40 01 00 02 4d da */
  public static final byte[] WRITE_CUR_DP_2 = { 0x00, 0x06, 0x40, 0x01, 0x00, 0x02, 0x4d, (byte) 0xda };
  /** 电流表写3位小数点00 06 40 01 00 03 8c 1a */
  public static final byte[] WRITE_CUR_DP_3 = { 0x00, 0x06, 0x40, 0x01, 0x00, 0x03, (byte) 0x8c, 0x1a };

  // ==================单片机指令================
  /** 程序开始 */
  public static final byte[] START = { (byte) 0xf3, (byte) 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x0a };
  /** 程序重新开始 */
  public static final byte[] RESTART = { (byte) 0xf3, (byte) 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52,
      0x0a };
  /** 测试OK */
  public static final byte[] OK = { (byte) 0xf3, (byte) 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x0a };
  /** 测试NG */
  public static final byte[] NG = { (byte) 0xf3, (byte) 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4e, 0x0a };
  /** 测试完成 */
  public static final byte[] FINISHED = { (byte) 0xf3, (byte) 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46,
      0x0a };
  /** 端口设置 */
  public static byte[] PORT_SET = { (byte) 0xf3, (byte) 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0x0a };
  /** 端口回读 */
  public static byte[] PORT_READ = { (byte) 0xf3, (byte) 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x0a };

}
